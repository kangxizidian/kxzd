import {getCursorText,highlightSelectedWord} from './cursortext.js'
import {fileByUnicode} from "./findwordhead.js"

const HTMLFileName=(addr,embed)=>{
    const [book,aname]=addr.split(':');
    return '../cct/'+book+'.htm'+(embed?'?embed':'')+'#'+aname;
}

const closeCardWithName=aname=>{
    let card=document.getElementsByName('card_'+aname);

    if (!card || !card.length)return;
    card=card[0]
    card.parentElement.removeChild(card)
    
    const controls=document.getElementsByTagName('BUTTON');

    const toremove=[];
    for(let i=0;i<controls.length;i++){
        const btn=controls[i];
        if (btn.dataset.aname==aname) toremove.push(btn);
    }
    toremove.forEach(btn=>btn.parentElement.removeChild(btn));

}
const closeCard=evt=>{
    const aname=evt.target.dataset.aname;
    closeCardWithName(aname);
}

const openinnewtab=evt=>{
    const aname=evt.target.dataset.aname;
    if (aname.indexOf(':')===-1){
        const uni=parseInt(aname.substr(1),16);
        const href=fileByUnicode(uni  )+"#"+aname;
        window.open(href);
    } else {
        window.open(HTMLFileName(aname))
    }
    closeCard(evt);
}
const insertControls=(node,aname)=>{

    const btnclose=document.createElement("button");
    btnclose.className='btnclose';
    btnclose.onclick=closeCard;
    btnclose.dataset.aname=aname;
    node.appendChild(btnclose);

    const btnnew=document.createElement('button');
    btnnew.innerHTML=' '
    btnnew.className='btnnewtab';
    btnnew.onclick=openinnewtab;
    btnnew.dataset.aname=aname;
    node.appendChild(btnnew);


}
const card_orig_text=evt=>{
    const addr=evt.target.attributes.n.value;
    const embedding=window.location.search.indexOf('embed')==-1;

    if (!embedding) {
        window.open(HTMLFileName(addr))
    } else {
        const ele=document.createElement("iframe");
        ele.className="card";
        ele.name='card_'+addr;
        ele.src=HTMLFileName(addr, embedding);
    
        evt.target.appendChild(ele);
        insertControls(evt.target,addr);    
        evt.target.appendChild(ele);
    
    }
}

const card_kxzd=evt=>{
    const t=getCursorText()
    if (!t || !t.tofind)return;
    const aname='u'+t.tofind.codePointAt(0).toString(16).toUpperCase();

    closeCardWithName(aname);

    const ele=document.createElement("iframe");
    ele.className="card";
    ele.name='card_'+aname;

    if (!window.kxzd_headwords)return;//not ready yet
    ele.src=fileByUnicode(t.tofind.codePointAt(0))+"?embed#"+aname;
    // ele.innerHTML='explaining '+t.tofind;

    insertControls(evt.target,aname);    
    evt.target.appendChild(ele);
    highlightSelectedWord(t.offset,t.tofind)
}
const default_onclick=evt=>{
    const tagName=evt.target.tagName;
    if (tagName==='K') {
        return card_orig_text(evt);
    }
    if (tagName!=='BUTTON') {
        return card_kxzd(evt);
    }
}
const rootnode=document.getElementsByTagName('xml')[0];
if (typeof rootnode!=='undefined')rootnode.onclick=default_onclick;

const deleteFromDocument=(from,to)=>{
    if (!from) from=rootnode.firstElementChild;
    let removelast=false;
    if (!to) {
        to=rootnode.lastElementChild;
        removelast=true;
    }
    const sel=getSelection();
    const range=document.createRange();
    range.setStart(from,0);
    range.setEnd(to,0);
    sel.removeAllRanges();
    sel.addRange(range);
    sel.deleteFromDocument();

    
    if (removelast){//stupid
        const sel=getSelection();
        const range=document.createRange();
        range.selectNode(to);
        sel.removeAllRanges();
        sel.addRange(range);
        sel.deleteFromDocument();
    }
    
}
const trimWH=unicode=>{
    const wh=document.getElementsByName(unicode);
    if (!wh || !wh.length)return;

    let removefrom=wh[0].nextSibling;
    while (removefrom && removefrom.tagName!=='A' && !removefrom.name ) {
        removefrom=removefrom.nextElementSibling;
    }
    deleteFromDocument( 0, wh[0]);
    if (removefrom) deleteFromDocument(removefrom)
}

const isKangxi=window.location.href.indexOf('kx')>-1;

const scrollToWH=unicode=>{
    const wh=document.getElementsByName(unicode);
    if (!wh || !wh.length)return;
    wh[0].scrollIntoView();
}


let hash=window.location.hash.substr(1);
const uri=decodeURI(hash);
let unicode=hash;
if (uri&&unicode[0]!=='u' && isKangxi) { //字 而非unicode 
    unicode = 'u'+uri.codePointAt(0).toString(16).toUpperCase();
}
if (window.location.hash && window.location.search.indexOf('embed')>-1) {
    trimWH(unicode);
    rootnode.parentElement.className='nested';
} else {
    //top load ui
    //generated by kangxizidian/kxzd-xml/src/pack-wordhead.js
    const script=document.createElement("script");
    if (window.location.href.indexOf('ziyin/index.htm')>-1) {
        script.src='../filewordhead.js';
    } else { //
        script.src='../kxzd/filewordhead.js';
    }
    document.getElementsByTagName('head')[0].appendChild(script);    
    scrollToWH(unicode);
}
